'use client'

import { useState, useRef, useEffect, ChangeEvent } from 'react'
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
} from '@/components/ui/dialog'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { Label } from '@/components/ui/label'
import { Upload, X, Image as ImageIcon, Loader2 } from 'lucide-react'
import { skillTreeAPI } from '@/entities/skill-tree'
import { toast } from 'sonner'

interface EditSkillDialogProps {
  open: boolean
  onOpenChange: (open: boolean) => void
  skill: {
    id: string
    title: string
    thumbnail?: string
    imageId?: number
  } | null
  onSave: (data: { title: string; image?: string; imageId?: number }) => void
}

export function EditSkillDialog({ open, onOpenChange, skill, onSave }: EditSkillDialogProps) {
  const [title, setTitle] = useState(skill?.title || '')
  const [image, setImage] = useState<string | undefined>(skill?.thumbnail)
  const [imageId, setImageId] = useState<number | undefined>(skill?.imageId)
  const [isLoading, setIsLoading] = useState(false)
  const [isUploading, setIsUploading] = useState(false)
  const fileInputRef = useRef<HTMLInputElement>(null)

  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ —Å–º–µ–Ω–µ –Ω–∞–≤—ã–∫–∞
  useEffect(() => {
    if (skill) {
      setTitle(skill.title)
      setImage(skill.thumbnail)
      setImageId(skill.imageId)
    }
  }, [skill])

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ - –∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ä–∞–∑—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  const handleFileChange = async (e: ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0]
    if (!file) return

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
    if (!file.type.startsWith('image/')) {
      toast.error('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ')
      return
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ (–º–∞–∫—Å 5MB)
    if (file.size > 5 * 1024 * 1024) {
      toast.error('–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 5MB')
      return
    }

    setIsUploading(true)
    setIsLoading(true)

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ä—ã–π imageId –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–≥–æ
    const oldImageId = imageId

    try {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ä–∞–∑—É –Ω–∞ S3 —á–µ—Ä–µ–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–µ—Ç–æ–¥ API
      const uploadedIds = await skillTreeAPI.uploadImage(file)
      const newImageId = uploadedIds[0]

      // –ü–æ–ª—É—á–∞–µ–º URL –¥–ª—è preview
      const response = await fetch(`/api/upload/files/${newImageId}`)
      if (!response.ok) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è')
      }

      const imageData = await response.json()
      const imageUrl = imageData.url

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º URL (–¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è) –∏ ID (–¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏)
      setImage(imageUrl)
      setImageId(newImageId)

      console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ:', { id: newImageId, url: imageUrl })
      toast.success('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ')

      // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–µ—Å–ª–∏ –±—ã–ª–æ)
      if (oldImageId) {
        try {
          await skillTreeAPI.deleteImage(oldImageId)
          console.log('üóëÔ∏è –°—Ç–∞—Ä–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ:', oldImageId)
        } catch (deleteError) {
          // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —Ç.–∫. —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ
          console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', deleteError)
        }
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error)
      const errorMessage = error instanceof Error ? error.message : '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'
      toast.error(errorMessage)
    } finally {
      setIsUploading(false)
      setIsLoading(false)
    }
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const handleRemoveImage = async () => {
    const currentImageId = imageId

    // –°–Ω–∞—á–∞–ª–∞ –æ—á–∏—â–∞–µ–º UI
    setImage(undefined)
    setImageId(undefined)
    if (fileInputRef.current) {
      fileInputRef.current.value = ''
    }

    // –£–¥–∞–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ S3 (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if (currentImageId) {
      try {
        await skillTreeAPI.deleteImage(currentImageId)
        console.log('üóëÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ:', currentImageId)
        toast.success('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ')
      } catch (error) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', error)
        // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É, —Ç.–∫. UI —É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω
      }
    }
  }

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
  const handleSave = () => {
    if (!title.trim()) {
      toast.error('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞–≤—ã–∫–∞')
      return
    }

    onSave({
      title: title.trim(),
      image: image,      // URL –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
      imageId: imageId,  // ID –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    })

    toast.success('–ù–∞–≤—ã–∫ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω')
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
    onOpenChange(false)
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –¥–∏–∞–ª–æ–≥–∞
  const handleClose = () => {
    onOpenChange(false)
  }

  if (!skill) return null

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="sm:max-w-[500px]">
        <DialogHeader>
          <DialogTitle>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–≤—ã–∫</DialogTitle>
          <DialogDescription>
            –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–∞
          </DialogDescription>
        </DialogHeader>

        <div className="space-y-6 py-4">
          {/* –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–∞–≤—ã–∫–∞ */}
          <div className="space-y-2">
            <Label htmlFor="skill-title">–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–∞–≤—ã–∫–∞ *</Label>
            <Input
              id="skill-title"
              value={title}
              onChange={(e) => setTitle(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞–≤—ã–∫–∞"
              maxLength={100}
            />
          </div>

          {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ */}
          <div className="space-y-2">
            <Label>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–∞</Label>

            {/* Preview –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
            {image ? (
              <div className="relative w-full aspect-video rounded-lg overflow-hidden border bg-muted">
                <img
                  src={image}
                  alt="Preview"
                  className="w-full h-full object-cover"
                />
                <Button
                  size="icon"
                  variant="destructive"
                  className="absolute top-2 right-2"
                  onClick={handleRemoveImage}
                >
                  <X className="h-4 w-4" />
                </Button>
              </div>
            ) : (
              <div className="w-full aspect-video rounded-lg border-2 border-dashed border-muted-foreground/25 bg-muted/50 flex items-center justify-center">
                <div className="text-center">
                  <ImageIcon className="mx-auto h-12 w-12 text-muted-foreground/50" />
                  <p className="mt-2 text-sm text-muted-foreground">
                    –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                  </p>
                </div>
              </div>
            )}

            {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ */}
            <input
              ref={fileInputRef}
              type="file"
              accept="image/*"
              onChange={handleFileChange}
              className="hidden"
            />
            <Button
              type="button"
              variant="outline"
              onClick={() => fileInputRef.current?.click()}
              disabled={isUploading}
              className="w-full"
            >
              {isUploading ? (
                <>
                  <Loader2 className="h-4 w-4 mr-2 animate-spin" />
                  –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä...
                </>
              ) : (
                <>
                  <Upload className="h-4 w-4 mr-2" />
                  {image ? '–ò–∑–º–µ–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ' : '–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'}
                </>
              )}
            </Button>
            <p className="text-xs text-muted-foreground">
              {isUploading
                ? '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä...'
                : '–§–æ—Ä–º–∞—Ç—ã: JPG, PNG, GIF. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 5MB'}
            </p>
          </div>
        </div>

        <DialogFooter>
          <Button variant="outline" onClick={handleClose}>
            –û—Ç–º–µ–Ω–∞
          </Button>
          <Button onClick={handleSave}>
            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
          </Button>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  )
}
