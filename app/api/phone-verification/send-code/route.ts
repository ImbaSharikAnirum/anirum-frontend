import { NextRequest, NextResponse } from 'next/server'
import { cookies } from 'next/headers'

export async function POST(request: NextRequest) {
  try {
    const body = await request.json()
    console.log('üì§ Frontend API route - —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞:', body)

    const cookieStore = await cookies()

    // –ü–æ–ª—É—á–∞–µ–º JWT —Ç–æ–∫–µ–Ω –∏–∑ cookies
    const jwt = cookieStore.get('session')?.value
    console.log('üîë JWT —Ç–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω:', !!jwt)

    if (!jwt) {
      console.error('‚ùå JWT —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ cookies')
      return NextResponse.json(
        { error: { message: '–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è' } },
        { status: 401 }
      )
    }

    // –ü—Ä–æ–∫—Å–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ Strapi
    console.log('üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ –∫ Strapi:', `${process.env.NEXT_PUBLIC_API_URL}/phone-verification/send-code`)

    const strapiResponse = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/phone-verification/send-code`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${jwt}`,
      },
      body: JSON.stringify(body),
    })

    const data = await strapiResponse.json()
    console.log('üì• –û—Ç–≤–µ—Ç –æ—Ç Strapi:', { status: strapiResponse.status, data })

    if (!strapiResponse.ok) {
      console.error('‚ùå Strapi –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É:', data)
      return NextResponse.json(
        { error: data },
        { status: strapiResponse.status }
      )
    }

    return NextResponse.json(data)

  } catch (error) {
    console.error('API Error:', error)
    return NextResponse.json(
      { error: { message: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' } },
      { status: 500 }
    )
  }
}