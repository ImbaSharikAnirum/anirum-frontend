'use client'

/**
 * –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≥–∞–π–¥–æ–≤
 * @layer widgets
 */

import { useState } from 'react'
import { Button } from '@/components/ui/button'
import { CheckCircle, AlertCircle } from 'lucide-react'
import { toast } from 'sonner'
import { PinterestLogin } from '@/shared/ui'
import type { User } from '@/entities/user/model/types'

interface PinterestStatus {
  isConnected: boolean
  message: string
}

interface GuidesContentProps {
  user: User | null
  initialPinterestStatus: PinterestStatus | null
}

export function GuidesContent({ user, initialPinterestStatus }: GuidesContentProps) {
  const [pinterestStatus, setPinterestStatus] = useState<PinterestStatus | null>(initialPinterestStatus)
  const [isDisconnecting, setIsDisconnecting] = useState(false)

  const isAuthenticated = !!user

  const fetchPinterestStatus = async () => {
    try {
      const response = await fetch('/api/pinterest/status')
      if (response.ok) {
        const data = await response.json()
        setPinterestStatus(data)
      } else {
        setPinterestStatus(null)
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ Pinterest:', error)
      setPinterestStatus(null)
    }
  }

  const handleDisconnect = async () => {
    try {
      setIsDisconnecting(true)

      const response = await fetch('/api/pinterest/disconnect', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
      })

      if (response.ok) {
        toast.success('Pinterest —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω')
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
        await fetchPinterestStatus()
      } else {
        throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ Pinterest')
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è Pinterest:', error)
      toast.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ Pinterest')
    } finally {
      setIsDisconnecting(false)
    }
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="text-center">
        <h1 className="text-3xl font-bold mb-8">–ì–∞–π–¥—ã</h1>

        {isAuthenticated ? (
          <div className="space-y-6">
            {pinterestStatus === null ? (
              // –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ (—Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ä–µ–∞–ª—å–Ω–æ–π –æ—à–∏–±–∫–µ API)
              <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                <div className="flex items-center space-x-2 text-yellow-600">
                  <AlertCircle className="w-5 h-5" />
                  <span>–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å Pinterest</span>
                </div>
                <div className="mt-4">
                  <PinterestLogin className="mx-auto">
                    üé® –ü–æ–¥–∫–ª—é—á–∏—Ç—å Pinterest
                  </PinterestLogin>
                </div>
              </div>
            ) : pinterestStatus.isConnected ? (
              // Pinterest –ø–æ–¥–∫–ª—é—á–µ–Ω
              <div className="space-y-4">
                <div className="bg-green-50 border border-green-200 rounded-lg p-4">
                  <div className="flex items-center justify-center space-x-2 text-green-600 mb-2">
                    <CheckCircle className="w-5 h-5" />
                    <span className="font-medium">Pinterest –ø–æ–¥–∫–ª—é—á–µ–Ω!</span>
                  </div>
                  <p className="text-sm text-green-600 mb-3">
                    {pinterestStatus.message}
                  </p>
                  <Button
                    onClick={handleDisconnect}
                    disabled={isDisconnecting}
                    variant="outline"
                    size="sm"
                  >
                    {isDisconnecting ? '–û—Ç–∫–ª—é—á–∞–µ–º...' : '–û—Ç–∫–ª—é—á–∏—Ç—å Pinterest'}
                  </Button>
                </div>

                <div className="bg-blue-50 border border-blue-200 rounded-lg p-6">
                  <h2 className="text-lg font-semibold mb-2">–ò–º–ø–æ—Ä—Ç –ø–∏–Ω–æ–≤</h2>
                  <p className="text-gray-600 mb-4">
                    –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–∏–Ω—ã –∏–∑ Pinterest –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏—Ö –∫–∞–∫ –≥–∞–π–¥—ã
                  </p>
                  <Button className="bg-blue-600 hover:bg-blue-700">
                    üé® –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–∏–Ω—ã
                  </Button>
                </div>
              </div>
            ) : (
              // Pinterest –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω
              <div className="space-y-4">
                <p className="text-lg text-gray-600">
                  –ü–æ–¥–∫–ª—é—á–∏—Ç–µ Pinterest, —á—Ç–æ–±—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–∏–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏—Ö –∫–∞–∫ –≥–∞–π–¥—ã
                </p>
                <PinterestLogin className="mx-auto">
                  üé® –ü–æ–¥–∫–ª—é—á–∏—Ç—å Pinterest
                </PinterestLogin>
              </div>
            )}
          </div>
        ) : (
          <div className="space-y-4">
            <p className="text-lg text-gray-600">
              –í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –≥–∞–π–¥–∞–º–∏
            </p>
            <a
              href="/auth/login"
              className="inline-block bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors"
            >
              –í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç
            </a>
          </div>
        )}
      </div>
    </div>
  )
}