'use client'

import { useState, useMemo } from 'react'
import { cn } from '@/lib/utils'
import { useRole } from "@/shared/hooks"
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip'

export interface IncomeCalculatorProps {
  pricePerLesson: number
  minStudents: number
  maxStudents: number
  selectedDays: string[]
  startDate?: Date
  endDate?: Date
  rentalPrice?: number
  currency: string
  isOnline?: boolean
  className?: string
  showCompanyProfit?: boolean
  taxAndCommissionRate?: number // –ü—Ä–æ—Ü–µ–Ω—Ç –Ω–∞–ª–æ–≥–æ–≤ –∏ –∫–æ–º–∏—Å—Å–∏–π (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 10%)
}

interface MonthData {
  month: number
  year: number
  monthName: string
  lessonsCount: number
}

const MONTH_NAMES = [
  '–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å',
  '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'
]

const DAY_MAP: Record<string, number> = {
  'sunday': 0, 'monday': 1, 'tuesday': 2, 'wednesday': 3,
  'thursday': 4, 'friday': 5, 'saturday': 6
}

export function IncomeCalculator({
  pricePerLesson,
  minStudents,
  maxStudents,
  selectedDays,
  startDate,
  endDate,
  rentalPrice = 0,
  currency,
  isOnline = true,
  className,
  showCompanyProfit = false,
  taxAndCommissionRate = 10
}: IncomeCalculatorProps) {
  const { isManager } = useRole()
  const [showTeacherDetails, setShowTeacherDetails] = useState(false)
  const [showCompanyDetails, setShowCompanyDetails] = useState(false)
  
  const formatSum = (sum: number) => sum.toLocaleString('ru-RU')
  
  const getCurrencySymbol = (curr: string) => {
    const symbols: Record<string, string> = {
      'USD': '$', 'EUR': '‚Ç¨', 'RUB': '‚ÇΩ', 'KZT': '‚Ç∏'
    }
    return symbols[curr] || curr
  }

  const currencySymbol = getCurrencySymbol(currency)
  const rent = isOnline ? 0 : rentalPrice

  // –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–Ω—è—Ç–∏–π –≤ –º–µ—Å—è—Ü–µ
  const getLessonsCountForMonth = (month: number, year: number): number => {
    let count = 0
    const startOfMonth = new Date(year, month, 1)
    const endOfMonth = new Date(year, month + 1, 0)
    
    for (let d = new Date(startOfMonth); d <= endOfMonth; d.setDate(d.getDate() + 1)) {
      const dayName = Object.keys(DAY_MAP).find(key => DAY_MAP[key] === d.getDay())
      if (dayName && selectedDays.includes(dayName)) {
        count++
      }
    }
    return count
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–µ–≤ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ
  const monthsData = useMemo((): MonthData[] => {
    if (!startDate || !endDate || selectedDays.length === 0) return []
    
    const months: MonthData[] = []
    const current = new Date(startDate.getFullYear(), startDate.getMonth(), 1)
    const endLimit = new Date(endDate.getFullYear(), endDate.getMonth() + 1, 0)
    
    while (current <= endLimit) {
      const lessonsCount = getLessonsCountForMonth(current.getMonth(), current.getFullYear())
      if (lessonsCount > 0) {
        months.push({
          month: current.getMonth(),
          year: current.getFullYear(),
          monthName: MONTH_NAMES[current.getMonth()],
          lessonsCount
        })
      }
      current.setMonth(current.getMonth() + 1)
    }
    
    return months
  }, [startDate, endDate, selectedDays])

  const nearestMonth = monthsData[0]
  const nearestLessons = nearestMonth?.lessonsCount || 0

  // –†–∞—Å—á–µ—Ç—ã –¥–æ—Ö–æ–¥–æ–≤ –ø–æ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–µ
  const calculateTeacherIncome = (lessons: number, students: number) => {
    const gross = pricePerLesson * lessons * students
    const taxAndCommission = Math.round(gross * (taxAndCommissionRate / 100))
    const afterTax = gross - taxAndCommission
    const rentTotal = rent * lessons
    const net = afterTax - rentTotal
    return Math.round(net * 0.7)
  }

  const calculateCompanyProfit = (lessons: number, students: number) => {
    const gross = pricePerLesson * lessons * students
    const taxAndCommission = Math.round(gross * (taxAndCommissionRate / 100))
    const afterTax = gross - taxAndCommission
    const rentTotal = rent * lessons
    const net = afterTax - rentTotal
    return Math.round(net * 0.3)
  }

  if (!pricePerLesson || !nearestLessons || !minStudents || !maxStudents) {
    return null
  }

  const totalMinIncome = calculateTeacherIncome(nearestLessons, minStudents)
  const totalMaxIncome = calculateTeacherIncome(nearestLessons, maxStudents)
  const totalMinProfit = calculateCompanyProfit(nearestLessons, minStudents)
  const totalMaxProfit = calculateCompanyProfit(nearestLessons, maxStudents)

  const courseCostPerMonth = pricePerLesson * nearestLessons

  return (
    <div className={cn("space-y-4", className)}>
      {/* –°—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞ –¥–ª—è —É—á–µ–Ω–∏–∫–∞ - –∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ */}
      <div 
        style={{
          margin: "18px 0 8px 0",
          fontSize: 15,
          color: "#444",
          fontFamily: "Nunito Sans, sans-serif",
        }}
      >
        –ü—Ä–∏ —Ç–∞–∫–æ–π —Ü–µ–Ω–µ –∑–∞ –∑–∞–Ω—è—Ç–∏–µ, –≤–∞—à –∫—É—Ä—Å –¥–ª—è —É—á–µ–Ω–∏–∫–∞ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å
        –ø—Ä–∏–º–µ—Ä–Ω–æ{" "}
        <b>
          {formatSum(courseCostPerMonth)} {currencySymbol}
        </b>{" "}
        –∑–∞ –º–µ—Å—è—Ü (–ø—Ä–∏ {nearestLessons} –∑–∞–Ω—è—Ç–∏—è—Ö)
      </div>
      
      {rent > 0 && (
        <div
          style={{
            margin: "16px 0 8px 0",
            fontSize: 15,
            color: "#444",
            fontFamily: "Nunito Sans, sans-serif",
          }}
        >
          –í—ã —É–∫–∞–∑–∞–ª–∏ –∞—Ä–µ–Ω–¥—É{" "}
          <b>
            {formatSum(rent)} {currencySymbol}
          </b>{" "}
          –∑–∞ –∑–∞–Ω—è—Ç–∏–µ. –ü—Ä–∏ {nearestLessons} –∑–∞–Ω—è—Ç–∏—è—Ö –≤ –±–ª–∏–∂–∞–π—à–µ–º
          –º–µ—Å—è—Ü–µ —ç—Ç–æ —Å–æ—Å—Ç–∞–≤–∏—Ç{" "}
          <b>
            {formatSum(rent * nearestLessons)} {currencySymbol}
          </b>
          .
        </div>
      )}

      {/* –í—ã–ø–ª–∞—Ç—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é - —Å—Ç–∏–ª—å –∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ */}
      <div
        style={{
          background: "#F7F7F7",
          borderRadius: 16,
          padding: "20px 24px",
          marginTop: 16,
          marginBottom: 0,
          fontSize: 16,
          color: "#222",
          lineHeight: 1.7,
          fontFamily: "Nunito Sans, sans-serif",
        }}
      >
        <div style={{ fontWeight: 600, marginBottom: 4 }}>
          –í–∞—à–∏ –≤—ã–ø–ª–∞—Ç—ã
          {nearestMonth
            ? ` (${nearestMonth.monthName} ${nearestMonth.year})`
            : ""}
          :
        </div>
        <div>
          ‚Äî –º–∏–Ω–∏–º—É–º (–ø—Ä–∏ {minStudents} —É—á–µ–Ω–∏–∫–∞—Ö):{" "}
          <b>
            {formatSum(totalMinIncome)} {currencySymbol}
          </b>
          <br />‚Äî –º–∞–∫—Å–∏–º—É–º (–ø—Ä–∏ {maxStudents} —É—á–µ–Ω–∏–∫–∞—Ö):{" "}
          <b>
            {formatSum(totalMaxIncome)} {currencySymbol}
          </b>
        </div>
        <div style={{ fontSize: 14, color: "#888", marginTop: 8 }}>
          üìé –î–æ—Ö–æ–¥ - 
          <TooltipProvider>
            <Tooltip>
              <TooltipTrigger asChild>
                <span style={{ cursor: "help" }}>
                  {" "}–°–µ—Ä–≤–∏—Å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã{" "}
                </span>
              </TooltipTrigger>
              <TooltipContent>
                <p style={{ color: "white" }}>–ù–∞–ª–æ–≥–∏ 6% + –ë–∞–Ω–∫ 4%{rent > 0 ? ' + –ê—Ä–µ–Ω–¥–∞' : ''}</p>
              </TooltipContent>
            </Tooltip>
          </TooltipProvider>
          = –ü—Ä–∏–±—ã–ª—å. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 70% –æ—Ç –ø—Ä–∏–±—ã–ª–∏
        </div>
        <button
          type="button"
          onClick={() => setShowTeacherDetails((v) => !v)}
          style={{
            marginTop: 12,
            background: "none",
            border: "none",
            color: "#1976d2",
            cursor: "pointer",
            fontSize: 15,
            textDecoration: "underline",
            padding: 0,
          }}
        >
          {showTeacherDetails ? "–°–∫—Ä—ã—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏" : "–ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–ø–ª–∞—Ç—ã –ø–æ –º–µ—Å—è—Ü–∞–º"}
        </button>
        {showTeacherDetails && monthsData.length > 1 && (
          <div style={{ marginTop: 16 }}>
            <div style={{ fontWeight: 500, marginBottom: 8 }}>
              –í—ã–ø–ª–∞—Ç—ã –ø–æ –º–µ—Å—è—Ü–∞–º:
            </div>
            <div style={{ overflowX: "auto" }}>
              <table
                style={{
                  borderCollapse: "collapse",
                  width: "100%",
                  fontSize: 15,
                }}
              >
                <thead>
                  <tr style={{ background: "#f0f0f0" }}>
                    <th
                      style={{
                        padding: "6px 10px",
                        border: "1px solid #e0e0e0",
                        textAlign: "left",
                      }}
                    >
                      –ú–µ—Å—è—Ü
                    </th>
                    <th
                      style={{ padding: "6px 10px", border: "1px solid #e0e0e0" }}
                    >
                      –ó–∞–Ω—è—Ç–∏–π
                    </th>
                    <th
                      style={{ padding: "6px 10px", border: "1px solid #e0e0e0" }}
                    >
                      –ú–∏–Ω–∏–º—É–º
                    </th>
                    <th
                      style={{ padding: "6px 10px", border: "1px solid #e0e0e0" }}
                    >
                      –ú–∞–∫—Å–∏–º—É–º
                    </th>
                  </tr>
                </thead>
                <tbody>
                  {monthsData.map(({ month, year, monthName, lessonsCount }) => (
                    <tr key={month + "-" + year}>
                      <td
                        style={{
                          padding: "6px 10px",
                          border: "1px solid #e0e0e0",
                        }}
                      >
                        {monthName} {year}
                      </td>
                      <td
                        style={{
                          padding: "6px 10px",
                          border: "1px solid #e0e0e0",
                          textAlign: "center",
                        }}
                      >
                        {lessonsCount}
                      </td>
                      <td
                        style={{
                          padding: "6px 10px",
                          border: "1px solid #e0e0e0",
                          textAlign: "center",
                        }}
                      >
                        {formatSum(calculateTeacherIncome(lessonsCount, minStudents))}{" "}
                        {currencySymbol}
                      </td>
                      <td
                        style={{
                          padding: "6px 10px",
                          border: "1px solid #e0e0e0",
                          textAlign: "center",
                        }}
                      >
                        {formatSum(calculateTeacherIncome(lessonsCount, maxStudents))}{" "}
                        {currencySymbol}
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        )}
      </div>

      {/* –ü—Ä–∏–±—ã–ª—å –∫–æ–º–ø–∞–Ω–∏–∏ - —Å—Ç–∏–ª—å –∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ */}
      {(showCompanyProfit && isManager) && (
        <div
          style={{
            background: "#F7F7F7",
            borderRadius: 16,
            padding: "20px 24px",
            marginTop: 24,
            marginBottom: 0,
            fontSize: 16,
            color: "#222",
            lineHeight: 1.7,
            fontFamily: "Nunito Sans, sans-serif",
          }}
        >
          <div style={{ fontWeight: 600, marginBottom: 4 }}>
            –ü—Ä–∏–±—ã–ª—å –∫–æ–º–ø–∞–Ω–∏–∏
            {nearestMonth
              ? ` (${nearestMonth.monthName} ${nearestMonth.year})`
              : ""}
            :
          </div>
          <div>
            ‚Äî –º–∏–Ω–∏–º—É–º:{" "}
            <b>
              {formatSum(totalMinProfit)} {currencySymbol}
            </b>
            <br />‚Äî –º–∞–∫—Å–∏–º—É–º:{" "}
            <b>
              {formatSum(totalMaxProfit)} {currencySymbol}
            </b>
          </div>
          <div style={{ fontSize: 14, color: "#888", marginTop: 8 }}>
            üìé –î–æ—Ö–æ–¥ - 
            <TooltipProvider>
              <Tooltip>
                <TooltipTrigger asChild>
                  <span style={{ cursor: "help" }}>
                    {" "}–°–µ—Ä–≤–∏—Å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã{" "}
                  </span>
                </TooltipTrigger>
                <TooltipContent>
                  <p style={{ color: "white" }}>–ù–∞–ª–æ–≥–∏ 6% + –ë–∞–Ω–∫ 4%{rent > 0 ? ' + –ê—Ä–µ–Ω–¥–∞' : ''}</p>
                </TooltipContent>
              </Tooltip>
            </TooltipProvider>
            = –ü—Ä–∏–±—ã–ª—å. –ö–æ–º–ø–∞–Ω–∏—è –ø–æ–ª—É—á–∞–µ—Ç 30% –æ—Ç –ø—Ä–∏–±—ã–ª–∏
          </div>
          <button
            type="button"
            onClick={() => setShowCompanyDetails((v) => !v)}
            style={{
              marginTop: 12,
              background: "none",
              border: "none",
              color: "#1976d2",
              cursor: "pointer",
              fontSize: 15,
              textDecoration: "underline",
              padding: 0,
            }}
          >
            {showCompanyDetails ? "–°–∫—Ä—ã—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏" : "–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–±—ã–ª—å –ø–æ –º–µ—Å—è—Ü–∞–º"}
          </button>
          {showCompanyDetails && monthsData.length > 1 && (
            <div style={{ marginTop: 16 }}>
              <div style={{ fontWeight: 500, marginBottom: 8 }}>
                –ü—Ä–∏–±—ã–ª—å –ø–æ –º–µ—Å—è—Ü–∞–º:
              </div>
              <div style={{ overflowX: "auto" }}>
                <table
                  style={{
                    borderCollapse: "collapse",
                    width: "100%",
                    fontSize: 15,
                  }}
                >
                  <thead>
                    <tr style={{ background: "#f0f0f0" }}>
                      <th
                        style={{
                          padding: "6px 10px",
                          border: "1px solid #e0e0e0",
                          textAlign: "left",
                        }}
                      >
                        –ú–µ—Å—è—Ü
                      </th>
                      <th
                        style={{ padding: "6px 10px", border: "1px solid #e0e0e0" }}
                      >
                        –ó–∞–Ω—è—Ç–∏–π
                      </th>
                      <th
                        style={{ padding: "6px 10px", border: "1px solid #e0e0e0" }}
                      >
                        –ú–∏–Ω–∏–º—É–º –∫–æ–º–ø–∞–Ω–∏–∏
                      </th>
                      <th
                        style={{ padding: "6px 10px", border: "1px solid #e0e0e0" }}
                      >
                        –ú–∞–∫—Å–∏–º—É–º –∫–æ–º–ø–∞–Ω–∏–∏
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    {monthsData.map(({ month, year, monthName, lessonsCount }) => (
                      <tr key={month + "-" + year}>
                        <td
                          style={{
                            padding: "6px 10px",
                            border: "1px solid #e0e0e0",
                          }}
                        >
                          {monthName} {year}
                        </td>
                        <td
                          style={{
                            padding: "6px 10px",
                            border: "1px solid #e0e0e0",
                            textAlign: "center",
                          }}
                        >
                          {lessonsCount}
                        </td>
                        <td
                          style={{
                            padding: "6px 10px",
                            border: "1px solid #e0e0e0",
                            textAlign: "center",
                          }}
                        >
                          {formatSum(calculateCompanyProfit(lessonsCount, minStudents))}{" "}
                          {currencySymbol}
                        </td>
                        <td
                          style={{
                            padding: "6px 10px",
                            border: "1px solid #e0e0e0",
                            textAlign: "center",
                          }}
                        >
                          {formatSum(calculateCompanyProfit(lessonsCount, maxStudents))}{" "}
                          {currencySymbol}
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            </div>
          )}
        </div>
      )}
    </div>
  )
}